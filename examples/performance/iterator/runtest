#!/bin/bash

if [[ -z $1 ]]; then
	echo "give an argument"
	exit 1
fi

avg() {
    awk 'BEGIN {FS=":"}; {sum+=$3} END {print sum/NR}'
}

get_value() {
    grep "$1" ./data/run_* | avg
}

for i in $(seq 1 50)
do mpirun -np 1 ./iterator >/dev/null
    mv -v ./data/BOUT.log.0 ./data/run_$i
done
echo -e "\a"

nested=$(get_value "Nested loops")
c_loop=$(get_value "C loop")
miter=$(get_value "MeshIterator")
diter_data=$(get_value "Single index")
diter_data_done=$(get_value "Three indices")
freach_data=$(get_value "C++11 Range-based for")

norm() {
    #echo "scale=2;$1 / $nested_field" | bc -l
    echo "scale=2;$1 / $c_loop" | bc -l
}

nested_norm=$(norm $nested)
c_loop_norm=$(norm $c_loop)
miter_norm=$(norm $miter)
diter_data_norm=$(norm $diter_data)
diter_data_done_norm=$(norm $diter_data_done)
freach_data_norm=$(norm $freach_data)

echo -e "Timings
=======" > $1
echo -e "C loop 				: $c_loop : $c_loop_norm
----- (x,y,z) indexing ----
Nested 				: $nested : $nested_norm
MeshIterator 			: $miter : $miter_norm
Single index		 	: $diter_data : $diter_data_norm
Three indices			: $diter_data_done : $diter_data_done_norm
------ [i] indexing -------
C++11 Range-based for 		: $freach_data : $freach_data_norm"  >> $1

